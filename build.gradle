plugins {
    id "java"
    id "org.springframework.boot" version "3.1.2"
    id "io.spring.dependency-management" version "1.1.3"
    id "org.hibernate.orm" version "6.3.0.Final"
}

group = 'com.sisimomo'
version = '1.1.0'
sourceCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    lombokVersion = "1.18.28"
    lombokMapstructBinding = "0.2.0"
    mapstructVersion = "1.5.5.Final"
    jpamodelgenVersion = "6.2.2.Final"
    springDataJpaEntityGraphVersion = "3.0.1"
    swaggerVersion = "2.2.0"
    janinoVersion = "3.1.10"
    springBootDataSourceDecoratorVersion = "1.9.0"
    keycloakVersion = "22.0.1"
    nanoidVersion = "2.0.0"
    jansiVersion = "2.4.0"
}

dependencies {
    // Spring
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-websocket"
    implementation "org.springframework:spring-messaging"
    implementation "org.springframework.security:spring-security-messaging"
    developmentOnly "org.springframework.boot:spring-boot-devtools"

    // MariaDB
    runtimeOnly "org.mariadb.jdbc:mariadb-java-client"

    // Swagger
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${swaggerVersion}"

    // Spring Boot DataSource Decorator - adds ability to intercept/logs all SQL queries
    implementation("com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:${springBootDataSourceDecoratorVersion}")

    // Spring Data JPA EntityGraph
    implementation "com.cosium.spring.data:spring-data-jpa-entity-graph:${springDataJpaEntityGraphVersion}"

    // janino - Logback filter
    implementation "org.codehaus.janino:janino:${janinoVersion}"

    // Keycloak Admin REST Client
    implementation "org.keycloak:keycloak-admin-client:${keycloakVersion}"

    implementation "com.aventrix.jnanoid:jnanoid:${nanoidVersion}"

    // Jansi
    implementation "org.fusesource.jansi:jansi:${jansiVersion}"

    /********** CODE GENERATION **********/

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // MapStruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // JPA 2 Metamodel Generator
    annotationProcessor "org.hibernate:hibernate-jpamodelgen:${jpamodelgenVersion}"


    /********** TEST **********/
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

hibernate {
    useSameVersion = true
    enhancement {
        enableLazyInitialization = true
        enableDirtyTracking = true
        enableAssociationManagement = true
        enableExtendedEnhancement = false
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
