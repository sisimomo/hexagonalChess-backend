spring.config.import=application-secret.properties
############## Spring/Libraries properties ##############
spring.application.name=hexagonal-chess-backend
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.default-property-inclusion=non-null
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.codec.max-in-memory-size=10MB
#server.servlet.context-path=/api
spring.main.allow-circular-references=true
############## SQL properties ##############
spring.datasource.url=jdbc:mariadb://${MARIADB_HOST:localhost}/${MARIADB_DATABASE:database}?enabledTLSProtocols=TLSv1.2
spring.jpa.hibernate.naming.implicit-strategy=com.github.sisimomo.hexagonalchess.backend.configuration.ImplicitNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB106Dialect
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=schema.sql
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.drop-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.hibernate.hbm2ddl.schema-generation.script.append=false
spring.jpa.hibernate.hbm2ddl.schema-generation.script.append=false
############## Logging properties ##############
# https://github.com/gavlyukovskiy/spring-boot-data-source-decorator
logging.level.net.ttddyy.dsproxy.listener=debug
decorator.datasource.datasource-proxy.logging=slf4j
decorator.datasource.datasource-proxy.query.enable-logging=true
decorator.datasource.datasource-proxy.query.log-level=debug
decorator.datasource.datasource-proxy.slow-query.enable-logging=true
decorator.datasource.datasource-proxy.slow-query.log-level=warn
decorator.datasource.datasource-proxy.slow-query.threshold=300
############## Keycloak properties ##############
keycloak.realm=${KEYCLOAK_REALM:master}
keycloak.client-id=${KEYCLOAK_CLIENT_ID:account}
############## Environment properties ##############
keycloak.host=${KEYCLOAK_HOST:http://localhost:8081}
frontend.host=${FRONTEND_HOST:http://localhost:4200}
backend.host=${BACKEND_HOST:http://localhost:8082}
############## Spring Security/oAuth2 properties ##############
spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.client-id}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.host}/realms/${keycloak.realm}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.issuer-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${keycloak.host}/realms/${keycloak.realm}/protocol/openid-connect/certs
############## Swagger properties ##############
springdoc.swagger-ui.oauth2RedirectUrl=${backend.host}/swagger-ui/oauth2-redirect.html
springdoc.swagger-ui.oauth.authorizationUrl=${keycloak.host}/realms/${keycloak.realm}/protocol/openid-connect/auth
springdoc.swagger-ui.oauth.tokenUrl=${keycloak.host}/realms/${keycloak.realm}/protocol/openid-connect/token
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.clientId=${keycloak.client-id}
springdoc.swagger-ui.doc-expansion=none